name: Restore, build and test

# on:
#   push:
#     branches:
#       - "main"

# jobs:
#   build-and-test:
#     runs-on: ubuntu-20.04
    
#     steps:
#       - name: Setup .NET Core SDK
#         uses: actions/setup-dotnet@v3.0.3
#         with:
#           dotnet-version: 6.0
#       - name: Checkout
#         uses: actions/checkout@v3.3.0
#       - name: Build
#         working-directory: .
#         run:
#           dotnet build PhoneInfo.API.sln
#       - name: Test
#         run: 
#           dotnet test PhoneInfo.API.sln
#       - name: SonarCloud Scan
#         uses: 
#           SonarSource/sonarcloud-github-action@v1.8
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  
#           SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      
on:
  push:
    branches:
      - main
jobs:
  build:
    name: Build and analyze
    runs-on: windows-latest
    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"phoneinfo-api" /o:"jin-personal" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
          dotnet build PhoneInfo.API.sln
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
